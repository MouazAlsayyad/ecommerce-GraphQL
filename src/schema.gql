# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddCategoriesToBrandInput {
  brandId: Int!
  categories: [Int!]!
}

input AddItemCartInput {
  itemId: Int!
  qty: Int!
}

input AddItemImagesInput {
  image: [String!]!
  itemId: Int!
  productId: Int!
}

input AddProductAttributeInput {
  name: String!
  productId: Int!
  value: String!
}

input AddProductImagesInput {
  image: [String!]!
  productId: Int!
}

input AddProductItemInput {
  SKU: String!
  price: Float!
  productId: Int!
  qtyInStock: Int!
  variationsItem: [CreateVariationItemInput!]
}

input AddTagsToProductInput {
  productId: Int!
  productTags: [String!]!
}

type Address {
  address: String!
  city: String!
  countryId: Int!
  id: Int!
  postal_code: String!
  region: String!
  street_number: String!
}

input AddressInput {
  address: String!
  city: String!
  countryId: Int!
  postal_code: String!
  region: String!
  street_number: String!
}

type Attribute {
  id: Int!
  name: String!
  value: String!
}

type AuthResponse {
  token: String!
}

type Brand {
  category: [Category!]!
  description: String!
  id: Int!
  image: String!
  name: String!
}

input BrandFilter {
  name: String
  orderBy: BrandOrderBy
  skip: Int
  take: Int
}

input BrandOrderBy {
  name: String
}

type Cart {
  item: [ItemWithQty!]!
  product: ProductType!
}

type Category {
  description: String!
  id: Int!
  image: String!
  name: String!
  parentId: Int
  product: [Product!]!
}

input CountryInput {
  country_name: String!
}

input CreateBrandInput {
  categories: [Int!]
  description: String
  image: String
  name: String!
}

input CreateCategoryInput {
  description: String
  image: String
  name: String!
}

input CreateProductAttributeInput {
  name: String!
  value: String!
}

input CreateProductInput {
  attributes: [CreateProductAttributeInput!]
  available: Boolean! = true
  brandId: Float
  categoriesIds: [Int!]
  coverImage: String!
  description: String!
  image: [String!]
  name: String!
  productItem: [CreateProductItemInput!]
  productTag: [String!]
  variation: [CreateVariationInput!]
}

input CreateProductItemInput {
  SKU: String!
  price: Float!
  qtyInStock: Int!
  variationsItem: [CreateVariationItemInput!]
}

input CreateReviewInput {
  productId: Float!
  rating: Float!
  review: String!
}

input CreateTagInput {
  value: String!
}

input CreateUserInput {
  email: String!
  password: String!
  phone_number: String!
  user_type: String!
  username: String!
}

input CreateVariationInput {
  name: String!
  variationOption: [CreateVariationOptionInput!]!
}

input CreateVariationItemInput {
  nameVariation: String!
  valueVariation: String!
}

input CreateVariationOptionInput {
  value: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FavoritesList {
  product: Product
  productId: Int!
}

input FavoritesListInput {
  productId: Int!
}

type Filter {
  brand: [Brand!]
  category: [Category!]
  maxPrice: Float
  minPrice: Float
  variationFilter: [VariationFilter!]
}

input FilterDTO {
  averageRating: Float
  brand: Int
  brandId: Float
  category: String
  categoryId: Int
  maxPrice: Float
  minPrice: Float
  name: String
  variationOptions: String
}

type Image {
  id: Int!
  imagePath: String!
}

type ItemWithQty {
  id: Float!
  price: Float!
  qty: Float!
  variationsItem: [VariationsItem!]!
}

input LogInInput {
  email: String!
  password: String!
}

type Mutation {
  addAddress(addressInput: AddressInput!): User!
  addAttribute(addProductAttributeInput: AddProductAttributeInput!): Product!
  addCategoriesToBrand(addCategoriesToBrandInput: AddCategoriesToBrandInput!): Brand!
  addCategoryToProduct(productCategoryInput: ProductCategoryInput!): Product!
  addCountry(countryInput: CountryInput!): Boolean!
  addImagesToItem(addItemImagesInput: AddItemImagesInput!): Product!
  addImagesToProduct(addProductImagesInput: AddProductImagesInput!): Product!
  addItemToCart(addItemCartInput: AddItemCartInput!): Boolean!
  addProductItem(addProductItemInput: AddProductItemInput!): Product!
  addProductToFavoritesList(favoritesListInput: FavoritesListInput!): [FavoritesList!]!
  addTagsToProduct(addTagsToProductInput: AddTagsToProductInput!): Boolean!
  createBrand(createBrandInput: CreateBrandInput!): Brand!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createProduct(createProductInput: CreateProductInput!): Product!
  createReview(createReviewInput: CreateReviewInput!): Review!
  createTag(createTagInput: CreateTagInput!): Tag!
  createUser(createUserInput: CreateUserInput!): User!
  deleteAddress(removeAddressInput: RemoveAddressInput!): Boolean!
  deleteProductItem(removeItemInput: RemoveItemInput!): Boolean!
  emptyTheShoppingCart: [Cart!]!
  login(loginInput: LogInInput!): AuthResponse!
  removeAttribute(removeAttributeInput: RemoveAttributeInput!): Boolean!
  removeBrand(id: Int!): Boolean!
  removeCategory(id: Int!): Boolean!
  removeCategoryFromBrand(removeCategoryFromBrandInput: RemoveCategoryFromBrandInput!): Boolean!
  removeCategoryFromProduct(productCategoryInput: ProductCategoryInput!): Boolean!
  removeImageFromItem(removeItemImageInput: RemoveItemImageInput!): Boolean!
  removeImageFromProduct(removeProductImageInput: RemoveProductImageInput!): Boolean!
  removeItemFromCart(addItemCartInput: AddItemCartInput!): [Cart!]!
  removeProduct(id: Int!): Boolean!
  removeProductFromFavoritesList(favoritesListInput: FavoritesListInput!): [FavoritesList!]!
  removeReview(productId: Int!): Boolean!
  removeTag(id: Int!): Boolean!
  removeTagFromProduct(removeTagFromProductInput: RemoveTagFromProductInput!): Boolean!
  removeUser(id: Int!): Boolean!
  singIn(singInInput: SignInInput!): AuthResponse!
  updateAddress(updateAddressInput: UpdateAddressInput!): User!
  updateAttribute(updateProductAttributeInput: UpdateProductAttributeInput!): Product!
  updateBrand(updateBrandInput: UpdateBrandInput!): Brand!
  updateCart(updateItemCartInput: UpdateItemCartInput!): [Cart!]!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  updateProductItem(updateProductItemInput: UpdateProductItemInput!): Product!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  updateTag(updateTagInput: UpdateTagInput!): Tag!
  updateVariation(updateVariationInput: UpdateVariationInput!): Product!
  updateVariationOption(updateVariationOptionInput: UpdateVariationOptionInput!): Product!
  uploadImage(image: Upload!): UploadImage!
}

type Product {
  attributes: [Attribute!]
  available: Boolean!
  averageRating: Float!
  brand: Brand
  category: [Category!]
  coverImage: String!
  description: String!
  id: Int!
  name: String!
  productImage: [Image!]
  productItem: [ProductItem!]
  productTag: [Tag!]
  relatedProducts: [Product!]
  reviewCount: Int!
  userReview: [Review!]
  variation: [Variation!]
}

input ProductCategoryInput {
  categoryId: Float!
  productId: Int!
}

input ProductFilterDTO {
  filter: FilterDTO
  orderBy: ProductOrderBy
  skip: Int
  take: Int
}

type ProductItem {
  ItemImages: [Image!]
  SKU: String!
  id: Int!
  price: Float!
  qtyInStock: Int!
  variationsItem: [VariationItem!]
}

enum ProductOrderBy {
  AvgCustomerReview
  NewProduct
  PriceHighToLow
  PriceLowToHigh
}

type ProductType {
  coverImage: String!
  id: Float!
  name: String!
}

type Query {
  FavoritesList: [FavoritesList!]!
  brand(id: Int!): Brand!
  brands(brandFilter: BrandFilter): [Brand!]!
  cart: [Cart!]!
  category(id: Int!): Category!
  filter(filterDTO: FilterDTO): Filter!
  product(id: Int!): Product!
  products(productFilterDTO: ProductFilterDTO): [Product!]!
  tag(id: Int!): Tag!
  user(id: Int!): User!
  users: [User!]!
}

input RemoveAddressInput {
  addressId: Int!
}

input RemoveAttributeInput {
  attributeId: Int!
  productId: Int!
}

input RemoveCategoryFromBrandInput {
  brandId: Int!
  categoryId: Int!
}

input RemoveItemImageInput {
  ItemImageId: Int!
  productId: Int!
}

input RemoveItemInput {
  itemId: Int!
  productId: Int!
}

input RemoveProductImageInput {
  productId: Int!
  productImageId: Int!
}

input RemoveTagFromProductInput {
  productId: Int!
  tagId: Int!
}

type Review {
  id: Int!
  rating: Float!
  review: String!
  userId: Int!
}

input SignInInput {
  email: String!
  password: String!
  phone_number: String!
  username: String!
}

type Tag {
  id: Int!
  value: String!
}

input UpdateAddressInput {
  address: String
  city: String
  countryId: Float
  id: Int!
  postal_code: String
  region: String
  street_number: String
}

input UpdateBrandInput {
  description: String
  id: Int!
  image: String
  name: String
}

input UpdateCategoryInput {
  description: String
  id: Int!
  image: String
  name: String
}

input UpdateItemCartInput {
  itemId: Int!
  qty: Int!
}

input UpdateProductAttributeInput {
  attributeId: Int!
  name: String
  productId: Int!
  value: String
}

input UpdateProductInput {
  available: Boolean
  brandId: Float
  coverImage: String
  description: String
  id: Int!
  image: [String!]
  name: String
}

input UpdateProductItemInput {
  SKU: String
  price: Float
  productId: Int!
  productItemId: Int!
  qtyInStock: Int
  variationsItem: [UpdateVariationItemInput!]
}

input UpdateReviewInput {
  productId: Int!
  rating: Float
  review: String
}

input UpdateTagInput {
  id: Int!
  value: String!
}

input UpdateVariationInput {
  name: String
  productId: Int!
  variationId: Int!
}

input UpdateVariationItemInput {
  nameVariation: String!
  valueVariation: String!
}

input UpdateVariationOptionInput {
  id: Int!
  productId: Int!
  value: String
  variationId: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadImage {
  createdAt: DateTime!
  filename: String!
  id: Int!
  path: String!
}

type User {
  addresses: [Address!]
  email: String!
  id: Int!
  isBlock: Boolean!
  phone_number: String!
  user_type: String!
  username: String!
}

type Variation {
  id: Int!
  name: String!
  variationOptions: [VariationOption!]
}

type VariationFilter {
  name: String!
  variationOptionFilter: [VariationOptionFilter!]!
}

type VariationItem {
  nameVariation: String!
  valueVariation: String!
}

type VariationOption {
  id: Int!
  value: String!
}

type VariationOptionFilter {
  value: String!
}

type VariationsItem {
  value: String!
}